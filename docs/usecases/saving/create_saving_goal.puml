/'
    Use case: User wants to create a saving goal.
    Actors: User
    Precondition: User has an account where to put the saving.
    Postcondition: The saving goal is created. A soft lock to the balance is put in place for the defined account based on the savings goal balance.
    Trigger: User creates the saving goal.
'/

@startuml
left to right direction
actor "User" as user
actor "System" as system

rectangle "Savings Goal Management System" {
  usecase "Create New Savings Goal" as UC1
  usecase "Validate Savings Goal Data" as UC2
  usecase "Verify Account Exists" as UC3
  usecase "Calculate Initial Progress" as UC4
  usecase "Create Savings Goal Record" as UC5
  usecase "Apply Soft Lock to Account" as UC6
  usecase "Set Up Auto-Contributions" as UC7
  usecase "Manage Savings Goal Tags" as UC8
  usecase "Calculate Projected Completion" as UC9
}

user --> UC1
UC1 ..> UC2 : <<include>>
UC1 ..> UC3 : <<include>>
UC1 ..> UC4 : <<include>>
UC1 ..> UC5 : <<include>>
UC5 ..> UC6 : <<include>>
UC5 ..> UC7 : <<extend>> <<if autoContribute is true>>
UC5 ..> UC8 : <<include>>
UC5 ..> UC9 : <<include>>

system --> UC2
system --> UC3
system --> UC4
system --> UC5
system --> UC6
system --> UC7
system --> UC8
system --> UC9

note right of UC1
  User provides:
  - Name
  - Category
  - Target amount
  - Account ID
  - Initial amount (optional)
  - Target date (optional)
  - Auto-contribute settings (optional)
  - Priority (optional)
  - Tags (optional)
  - Description (optional)
end note

note right of UC2
  System validates:
  - Required fields are present
  - Target amount is positive
  - Initial amount is non-negative
  - Target date is in the future (if provided)
  - Auto-contribute amount is positive (if enabled)
  - Currency is valid
end note

note right of UC3
  System:
  - Verifies account exists
  - Checks account is active
  - Confirms account currency matches goal currency
end note

note right of UC4
  System:
  - Calculates initial progress percentage
  - Sets current amount to initial amount
  - Determines initial completion status
end note

note right of UC5
  System:
  - Creates savings goal record
  - Sets creation timestamp
  - Links to account
  - Sets initial status to "active"
end note

note right of UC6
  System:
  - Calculates soft lock amount
  - Applies soft lock to account balance
  - Records soft lock in account metadata
  - Updates available balance calculation
end note

note right of UC7
  System:
  - Sets up auto-contribution schedule
  - Configures frequency and amount
  - Creates recurring transfer rule
  - Sets first contribution date
end note

note right of UC8
  System:
  - Validates provided tags
  - Creates new tags if needed
  - Associates tags with savings goal
  - Creates entries in junction table
end note

note right of UC9
  System:
  - Calculates projected completion date
  - Based on target amount and contributions
  - Considers auto-contributions if enabled
  - Updates projected completion field
end note

@enduml